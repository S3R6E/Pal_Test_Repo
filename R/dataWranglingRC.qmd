---
title: "Data wrangling for ReefCloud data"
author: "Samuel Chan"
format: html
editor: source
---

```{r}
#| label: loadPackages
library(tidyverse)
```

```{r}
#| label: readData
cg_data <- read.csv("../data/primary/cg-data.csv")
cg_label <- read.csv("../data/primary/cg-label.csv")

cg_data |> glimpse()
```

```{r}
#| label: subsetData
cg_data <- cg_data |> 
  dplyr::select(project_id,
                project_name,
                site_id,
                site_name,
                site_latitude,
                site_longitude,
                site_reef_name,
                site_reef_type,
                site_reef_zone,
                site_management,
                survey_title,
                survey_start_date..UTC.,
                survey_depth,
                survey_transect_number,
                image_id,
                image_disabled,
                point_machine_classification,
                point_human_classification
                )

cg_data |>  glimpse()
```

```{r}
#| label: removeImages
cg_data <- cg_data |> 
  dplyr::filter(image_disabled == "False") |> 
  select(-image_disabled)
```

```{r}
#| label: pivotClass
cg_data <- cg_data |> 
  pivot_longer(cols = matches("point_.*_classification"),
    names_to = "type",
    values_to = "classification"
    ) 
```

```{r}
#| label: joinLabelset
cg_data <-
  cg_data |>
  left_join(cg_label |>
              dplyr::select(CODE, GROUP = `FUNCTIONAL.GROUP`),
              by = c("classification" = "CODE")
    )
cg_data |> as.data.frame() |> head() 
```

```{r}
#| label: recode
cg_data <- 
  cg_data |> 
    mutate(transect_name = paste(site_name, year(survey_start_date..UTC.), survey_transect_number, sep ="_"),
         transect_id = paste0(site_id, year(survey_start_date..UTC.), survey_transect_number))

cg_data |>  as.data.frame() |>  glimpse()
```

```{r}
#| label: mutateYear
cg_data <-
  cg_data |>
  mutate(year = lubridate::year(survey_start_date..UTC.))
cg_data |> as.data.frame() |> glimpse() 
```

```{r}
#| label: countCover
cg_cover <- 
  cg_data |> 
  group_by(across(c(starts_with("site"),
    starts_with("survey"),
    starts_with("transect"),
    year,
    image_id,
    type,
    classification,
    GROUP))
  ) |>
  summarise(COUNT = n(), .groups = "keep") |> 
  ungroup(GROUP) |>
  mutate(TOTAL = sum(COUNT)) |>
  ungroup() 
cg_cover |> as.data.frame() |> glimpse() 
```

```{r}
GROUPS <- cg_cover |> pull(GROUP) |> unique()
filler <- cg_cover %>%
  dplyr::select(
    starts_with("site"),
    survey_start_date..UTC.,
    survey_depth,
    transect_name,
    image_id,
    transect_id,
    type,
    TOTAL) |> 
  distinct() |> 
 tidyr::crossing(GROUP = GROUPS) 

cg_cover <-
  cg_cover |> 
  full_join(filler) |>
  group_by(
    across(c(starts_with("site"),
      survey_start_date..UTC.,
      survey_depth,
      transect_name,
      image_id,
      transect_id,
      type,
      GROUP
    ))) |> 
  mutate(COUNT = ifelse(is.na(COUNT), 0, COUNT),
    TOTAL = max(TOTAL, na.rm = TRUE)
  )
cg_cover |> as.data.frame() |> head() 
```

```{r}
## Now sum up to transect level
cg_cover <- 
  cg_cover |>
  ungroup(image_id) |>
  summarise(COUNT = sum(COUNT),
    TOTAL = sum(TOTAL)
  ) |> 
  ungroup() 
cg_cover |> as.data.frame() |> glimpse()

cg_cover <- 
  cg_cover |> 
  rename(data_tally_group = GROUP,
         count_groupcode  = COUNT,
         total = TOTAL)
cg_cover |> as.data.frame() |> glimpse()
```

```{r}
#| label: countCover
cg_tau <- 
  cg_data |> 
  group_by(across(c(starts_with("site"),
    starts_with("survey"),
    starts_with("transect"),
    year,
    type,
    image_id,
    classification))
  ) |>
  summarise(COUNT = n(), .groups = "keep") |> 
  ungroup(classification) |>
  mutate(TOTAL = sum(COUNT)) |>
  ungroup() 
cg_tau |> as.data.frame() |> glimpse() 
```

```{r}
TAUS <- cg_tau |> pull(classification) |> unique()
filler.tau <- cg_tau %>%
  dplyr::select(
    starts_with("site"),
    survey_start_date..UTC.,
    survey_depth,
    transect_name,
    transect_id,
    image_id,
    type,
    TOTAL) |> 
  distinct() |> 
 tidyr::crossing(classification = TAUS) 

cg_tau <-
  cg_tau |> 
  full_join(filler.tau) |>
  group_by(
    across(c(starts_with("site"),
      survey_start_date..UTC.,
      survey_depth,
      transect_name,
      transect_id,
      image_id,
      type,
      classification
    ))) |> 
  mutate(COUNT = ifelse(is.na(COUNT), 0, COUNT),
    TOTAL = max(TOTAL, na.rm = TRUE)
  )
cg_tau |> as.data.frame() |> head() 
```

```{r}
## Now sum up to transect level
cg_tau <- 
  cg_tau |>
  ungroup(image_id) |>
  summarise(COUNT = sum(COUNT),
    TOTAL = sum(TOTAL)
  ) |> 
  ungroup() 
cg_tau |> as.data.frame() |> glimpse()

cg_tau <- 
  cg_tau |> 
  rename(data_tally_class = classification,
         count_class  = COUNT,
         total = TOTAL)
cg_tau |> as.data.frame() |> glimpse()
```
